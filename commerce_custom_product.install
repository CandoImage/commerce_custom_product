<?php

/**
 * @file
 * Defines the database schema for customizable product support.
 */


/**
 * Implements hook_schema().
 */
function commerce_custom_product_schema() {
  $schema = array();

  $schema['commerce_product_line_item_type'] = array(
    'description' => 'Stores information about custom product line item types.',
    'fields' => array(
      'type' => array(
        'description' => 'The machine-name of the line item type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The human-readable name of the line item type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('type'),
  );

  return $schema;
}

/**
 * Implements hook_field_schema().
 */
function commerce_custom_product_field_schema($field) {
  if ($field['type'] == 'commerce_custom_product_line_item_type_reference') {
    return array(
      'columns' => array(
        'target_id' => array(
          'description' => 'Stored ID of line item type being referenced.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ),
        'use_multi' => array(
          'description' => 'One line item instance per product item will be added if 1.',
          'type' => 'int',
          'size' => 'tiny',
          'unsigned' => TRUE,
          'not null' => FALSE,
          'default' => 0,
        ),
      ),
      'indexes' => array(
        'target_id' => array('target_id'),
      ),
    );
  }
}

/**
 * Implements hook_uninstall().
 */
function commerce_custom_product_uninstall() {
  variable_del('commerce_custom_product_customizing_pane_description');
  variable_del('commerce_custom_product_customizing_pane_update_button');
  variable_del('commerce_custom_product_customizing_skip');
}
